name: Get FileServers
authors:
  - name: ''
    handle: '@424f424f'
    link: https://twitter.com/424f424f
description: |
  An Active Directory enumeration module that identifies file servers and shared
  resources within the target domain via LDAP queries. This module performs
  essential reconnaissance to map file storage infrastructure and potential
  data exfiltration targets.

  The module queries user accounts for home directory configurations, script path
  information, and profile path data to identify file server locations and shared
  resource mappings. This information is crucial for understanding the domain's
  file storage infrastructure and identifying potential data exfiltration targets.

  The enumeration results provide a foundation for data exfiltration from file
  servers, lateral movement through shared resources, and understanding data
  storage and backup infrastructure. This module is essential for comprehensive
  domain reconnaissance and helps operators identify valuable data storage
  locations and shared resources within the target environment for data harvesting
  and lateral movement strategies.
software: ''
tactics: []
techniques:
  - T1482
background: false
output_extension: ''
needs_admin: false
opsec_safe: true
language: python
min_language_version: '2.6'
comments:
  - ''
options:
  - name: Agent
    description: Agent to run on.
    required: true
    value: ''
  - name: LDAPAddress
    description: LDAP IP/Hostname
    required: true
    value: ''
  - name: BindDN
    description: user@penlab.local
    required: true
    value: ''
  - name: Password
    description: Password to connect to LDAP
    required: false
    value: ''
script: |-
  import sys, os, subprocess, re
  BindDN = "{{ BindDN }}"
  LDAPAddress = "{{ LDAPAddress }}"
  password = "{{ Password }}"

  regex = re.compile('.+@([^.]+)\..+')
  global tld
  match = re.match(regex, BindDN)
  tld = match.group(1)
  global ext
  ext = BindDN.split('.')[1]

  cmd = \"""ldapsearch -x -h {} -b "dc={},dc={}" -D {} -w {} "(&(samAccountType=805306368))" ""\".format(LDAPAddress, tld, ext, BindDN, password)
  output = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, bufsize=1)
  with output.stdout:
      print("")
      for line in iter(output.stdout.readline, b''):
          if ("homeDirectory" or "scriptPath" or "profilePath") in line:
              print("Results:")
              print("")
              m = re.search(r'([^\]*)', line)
              if m:
                  print(m.group(1))
  output.wait()
  print("")
