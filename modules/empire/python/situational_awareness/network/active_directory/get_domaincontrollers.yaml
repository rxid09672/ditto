name: Get Domain Controllers
authors:
  - name: ''
    handle: '@424f424f'
    link: https://twitter.com/424f424f
description: |
  An Active Directory enumeration module that identifies all domain controllers
  within the target domain. This module performs critical reconnaissance to
  map the authentication infrastructure and identify high-value targets for
  privilege escalation and persistence.

  The module queries Active Directory via LDAP to extract domain controller
  objects using specific userAccountControl flags that identify DCs. This
  information is essential for understanding the domain's authentication
  infrastructure and identifying primary targets for credential harvesting
  and privilege escalation.

  The enumeration results provide critical intelligence for domain compromise
  and persistence by revealing the complete domain controller infrastructure.
  This module is fundamental for domain reconnaissance and helps operators
  identify the most valuable targets for credential harvesting, privilege
  escalation, and establishing persistent access to the domain infrastructure.
software: ''
tactics: []
techniques:
  - T1482
background: false
output_extension: ''
needs_admin: false
opsec_safe: true
language: python
min_language_version: '2.6'
comments:
  - ''
options:
  - name: Agent
    description: Agent to run on.
    required: true
    value: ''
  - name: LDAPAddress
    description: LDAP IP/Hostname
    required: true
    value: ''
  - name: BindDN
    description: user@penlab.local
    required: true
    value: ''
  - name: Password
    description: Password to connect to LDAP
    required: false
    value: ''
script: |-
  import sys, os, subprocess, re
  BindDN = "{{ BindDN }}"
  LDAPAddress = "{{ LDAPAddress }}"
  password = "{{ Password }}"

  regex = re.compile('.+@([^.]+)\..+')
  global tld
  match = re.match(regex, BindDN)
  tld = match.group(1)
  global ext
  ext = BindDN.split('.')[1]


  cmd = \"""ldapsearch -x -h {} -b "dc={},dc={}" -D {} -w {} "(&(objectcategory=Computer)(userAccountControl:1.2.840.113556.1.4.803:=8192))" ""\".format(LDAPAddress, tld, ext, BindDN, password)
  output = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
  output2 = subprocess.Popen(["grep", "name:"],stdin=output.stdout, stdout=subprocess.PIPE,universal_newlines=True)
  output.stdout.close()
  out,err = output2.communicate()
  print("")
  print(out)
