name: Get-SQLQuery
authors:
  - name: ''
    handle: '@_nullbind'
    link: ''
  - name: ''
    handle: '@0xbadjuju'
    link: ''
description: |
  PowerShell module that leverages PowerUpSQL to execute custom SQL queries against
  target SQL Server instances. Provides flexible authentication options including
  Windows credentials, SQL logins, and Dedicated Administrator Connection (DAC)
  support. Establishes database connections using .NET SqlClient and executes
  user-defined queries with configurable timeouts and error handling.
software: ''
tactics: [TA0009]
techniques: [T1213]
background: true
output_extension:
needs_admin: false
opsec_safe: true
language: powershell
min_language_version: '2'
comments:
  - https://github.com/NetSPI/PowerUpSQL/blob/master/PowerUpSQL.ps1
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: Username
    description: SQL Server or domain account to authenticate with.
    required: false
    value: ''
  - name: Password
    description: SQL Server or domain account password to authenticate with.
    required: false
    value: ''
  - name: Instance
    description: SQL Server instance to connection to.
    required: false
    value: ''
  - name: Query
    description: Query to be executed on the SQL Server.
    required: true
    value: ''
  - name: OutputFunction
    description: PowerShell's output function to use ("Out-String", "ConvertTo-Json",
      "ConvertTo-Csv", "ConvertTo-Html", "ConvertTo-Xml").
    required: false
    value: Out-String
    strict: true
    suggested_values:
      - Out-String
      - ConvertTo-Json
      - ConvertTo-Csv
      - ConvertTo-Html
      - ConvertTo-Xml
script_path: collection/Get-SQLQuery.ps1
script_end: Get-SQLQuery {{ PARAMS }} | {{ OUTPUT_FUNCTION }} | %{$_ + "`n"}; 'Get-SQLQuery
  completed'
