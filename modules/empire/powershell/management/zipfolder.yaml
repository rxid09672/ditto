name: Invoke-ZipFolder
authors:
  - name: Will Schroeder
    handle: '@harmj0y'
    link: https://twitter.com/harmj0y
description: |
  Compresses a target folder into a ZIP archive for efficient data exfiltration
  and storage. This module creates compressed archives of directories to reduce
  transfer size and organize collected data for later analysis.

  The compression
  process uses native Windows COM objects to create ZIP files without requiring
  external compression utilities. This approach ensures compatibility across different
  Windows environments and reduces the footprint of data collection activities.

  ZIP archives are commonly used in data exfiltration scenarios to package multiple
  files and directories into a single transferable file, making it easier to move
  large amounts of data while maintaining directory structure and reducing network
  bandwidth requirements.
software: ''
tactics: [TA0009]
techniques: [T1560.002]
background: false
output_extension:
needs_admin: false
opsec_safe: true
language: powershell
min_language_version: '2'
comments: []
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: Folder
    description: Path to the folder that will be compressed.
    required: true
    value: ''
  - name: ZipFileName
    description: Name and path for the output ZIP file.
    required: true
    value: ''
script: |
  function Invoke-ZipFolder
  {
      param([string]$Folder, [string]$ZipFileName)

      if (-not (Test-Path $Folder)) {
          "Target folder $Folder doesn't exist."
          return
      }

      if (test-path $ZipFileName) {
          "Zip file already exists at $ZipFileName"
          return
      }

      $Directory = Get-Item $Folder

      Set-Content $ZipFileName ("PK" + [char]5 + [char]6 + ("$([char]0)" * 18))
      (dir $ZipFileName).IsReadOnly = $false

      $ZipFileName = resolve-path $ZipFileName

      $ZipFile = (new-object -com shell.application).NameSpace($ZipFileName)
      $ZipFile.CopyHere($Directory.FullName)
      "Folder $Folder zipped to $ZipFileName"
  }
script_end: Invoke-ZipFolder {{ PARAMS }}
