name: Invoke-PsExec
authors:
  - name: Will Schroeder
    handle: '@harmj0y'
    link: https://twitter.com/harmj0y
description: |
  Executes commands or Empire stagers on remote systems using a modified
  implementation of the PsExec technique. Unlike Sysinternals PsExec, this PowerShell
  implementation creates a service on the remote system that executes the specified
  payload, then removes the service to eliminate evidence of execution.

  The
  module requires administrative credentials on the target system and uses SMB for
  connectivity, operating over standard ports (445/TCP). It supports both plaintext
  credentials and NTLM hashes (pass-the-hash) for authentication.

  While effective
  for lateral movement, this technique has significant OPSEC considerations as
  it creates artifacts including Windows service creation events, service binary
  writes, and potentially suspicious process execution chains. Modern EDR and monitoring
  solutions often specifically watch for PsExec-style execution patterns.
software: S0029
tactics: [TA0008]
techniques: [T1569.002, T1021.002]
background: true
output_extension:
needs_admin: false
opsec_safe: false
language: powershell
min_language_version: '2'
comments:
  - https://github.com/rapid7/metasploit-framework/blob/master/tools/psexec.rb
options:
  - name: Payload
    description: Manually build command or use Empire.
    required: true
    value: 'Empire'
    strict: true
    internal: true
    suggested_values:
      - Manual
      - Empire
  - name: Listener
    description: Listener to use.
    required: false
    value: ''
    depends_on:
      - name: Payload
        values: ['Empire']
  - name: Obfuscate
    description: Switch. Obfuscate the launcher powershell code, uses the ObfuscateCommand
      for obfuscation types. For powershell only.
    required: false
    value: 'False'
    strict: true
    suggested_values:
      - True
      - False
  - name: ObfuscateCommand
    description: The Invoke-Obfuscation command to use. Only used if Obfuscate switch
      is True. For powershell only.
    required: false
    value: Token\All\1
    depends_on:
      - name: Obfuscate
        values: ['True']
  - name: Bypasses
    description: Bypasses as a space separated list to be prepended to the launcher.
    required: false
    value: mattifestation etw
  - name: ComputerName
    description: Host to execute the stager on.
    required: true
    value: ''
  - name: ServiceName
    description: The name of the service to create.
    required: true
    value: Updater
  - name: Command
    description: Custom command to execute on remote hosts.
    required: false
    value: ''
    depends_on:
      - name: Payload
        values: ['Manual']
  - name: ResultFile
    description: Name of the file to write the results to on agent machine.
    required: false
    value: ''
  - name: UserAgent
    description: User-agent string to use for the staging request (default, none,
      or other).
    required: false
    value: default
    depends_on:
      - name: Payload
        values: ['Empire']
  - name: Proxy
    description: Proxy to use for request (default, none, or other).
    required: false
    value: default
    depends_on:
      - name: Payload
        values: ['Empire']
  - name: ProxyCreds
    description: Proxy credentials ([domain\]username:password) to use for request
      (default, none, or other).
    required: false
    value: default
    depends_on:
      - name: Payload
        values: ['Empire']
  - name: OutputFunction
    description: PowerShell's output function to use ("Out-String", "ConvertTo-Json",
      "ConvertTo-Csv", "ConvertTo-Html", "ConvertTo-Xml").
    required: false
    value: Out-String
    strict: false
    suggested_values:
      - Out-String
      - ConvertTo-Json
      - ConvertTo-Csv
      - ConvertTo-Html
      - ConvertTo-Xml
script_path: lateral_movement/Invoke-PsExec.ps1
advanced:
  custom_generate: true
