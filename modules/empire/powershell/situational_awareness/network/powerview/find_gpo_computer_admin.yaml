name: Get-DomainGPOComputerLocalGroupMapping
authors:
  - name: Will Schroeder
    handle: '@harmj0y'
    link: https://twitter.com/harmj0y
description: Analyzes Group Policy Objects (GPOs) to identify users and groups that
  have been granted administrative access to computers through policy-based local
  group modifications. This module leverages PowerView's Get-DomainGPOComputerLocalGroupMapping
  function to examine GPO configurations and determine which users or groups have
  been added to local administrative groups on target computers through policy enforcement.
  The reconnaissance capability is essential for understanding policy-based administrative
  access patterns, identifying potential privilege escalation opportunities through
  GPO misconfigurations, and mapping administrative access relationships across the
  domain. By analyzing GPO computer local group mappings, operators can identify
  users with policy-granted administrative access, understand the scope of policy-based
  privilege assignments, and discover potential attack vectors that leverage GPO-based
  administrative access. The module supports targeting specific computers or GPOs
  to focus reconnaissance efforts on particular administrative relationships. This
  information is crucial for privilege escalation planning, understanding policy-based
  access control, and identifying potential lateral movement opportunities through
  policy-granted administrative access.
software: S0194
tactics: [TA0007]
techniques: [T1482, T1069, T1615]
background: true
output_extension:
needs_admin: false
opsec_safe: true
language: powershell
min_language_version: '2'
comments:
  - https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: ComputerIdentity
    description: A SamAccountName, DistinguishedName, SID, GUID, or a dns host name
      for the computer to identify GPO local group mappings for.
    required: false
    value: ''
  - name: LocalGroup
    description: The local group to check access against.
    required: false
    value: ''
  - name: Domain
    description: The domain to use for the query, defaults to the current domain.
    required: false
    value: ''
  - name: SearchBase
    description: The LDAP source to search through, e.g. "LDAP://OU=secret,DC=testlab,DC=local"
      Useful for OU queries.
    required: false
    value: ''
  - name: Server
    description: Specifies an active directory server (domain controller) to bind
      to
    required: false
    value: ''
  - name: SearchScope
    description: Specifies the scope to search under, Base/OneLevel/Subtree (default
      of Subtree)
    required: false
    value: ''
  - name: ResultPageSize
    description: Specifies the PageSize to set for the LDAP searcher object.
    required: false
    value: ''
  - name: ServerTimeLimit
    description: Specifies the maximum amount of time the server spends searching.
      Default of 120 seconds.
    required: false
    value: ''
  - name: Tombstone
    description: Specifies that the search should also return deleted/tombstoned
      objects.
    required: false
    value: 'False'
    strict: true
    suggested_values:
      - True
      - False
  - name: OutputFunction
    description: PowerShell's output function to use ("Out-String", "ConvertTo-Json",
      "ConvertTo-Csv", "ConvertTo-Html", "ConvertTo-Xml").
    required: false
    value: Out-String
    strict: false
    suggested_values:
      - Out-String
      - ConvertTo-Json
      - ConvertTo-Csv
      - ConvertTo-Html
      - ConvertTo-Xml
script_path: situational_awareness/network/powerview.ps1
script_end: Get-DomainGPOComputerLocalGroupMapping {{ PARAMS }} | {{ OUTPUT_FUNCTION
  }} | %{$_ + "`n"}; 'Get-DomainGPOComputerLocalGroupMapping completed'
