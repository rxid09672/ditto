name: Get-DomainGroup
authors:
  - name: Will Schroeder
    handle: '@harmj0y'
    link: https://twitter.com/harmj0y
description: |
  A comprehensive Active Directory reconnaissance module that queries
  and enumerates group objects across the domain. This module is
  part of the PowerView toolkit and provides extensive filtering
  capabilities to identify specific groups, their memberships, and
  administrative privileges for privilege escalation planning.

  The module supports multiple search criteria including group name,
  SID, GUID, and distinguished name patterns. It can filter for
  specific group types such as administrative groups with adminCount=1,
  groups containing specific members, and groups with particular
  descriptions or attributes. This makes it particularly effective
  for identifying high-value groups and understanding the domain's
  permission structure.

  This technique is essential for Active Directory reconnaissance
  as it provides detailed group information including member lists,
  group scopes, security attributes, and administrative privileges.
  The gathered intelligence can be used for privilege escalation
  planning, lateral movement targeting, and understanding the overall
  domain security architecture. The module includes advanced LDAP
  filtering options for precise targeting and comprehensive output
  formatting.
software: S0194
tactics: [TA0007]
techniques: [T1482, T1615, T1069.002]
background: true
output_extension:
needs_admin: false
opsec_safe: true
language: powershell
min_language_version: '2'
comments:
  - https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: Identity
    description: A SamAccountName, DistinguishedName, SID, GUID, or a dns host name,
      wildcards accepted.
    required: false
    value: ''
  - name: MemberIdentity
    description: A SamAccountName, DistinguishedName, SID, GUID, or a dns host name,
      wildcards accepted.
    required: false
    value: ''
  - name: AdminCount
    description: Switch. Return users with "(adminCount=1)" (meaning are/were privileged).
    required: false
    value: ''
  - name: LDAPFilter
    description: A customized ldap filter string to use, e.g. "(description=*admin*)"
    required: false
    value: ''
  - name: Domain
    description: The domain to use for the query, defaults to the current domain.
    required: false
    value: ''
  - name: Server
    description: Specifies an Active Directory server (Domain controller) to reflect
      LDAP queries through.
    required: false
    value: ''
  - name: Properties
    description: Specifies the properties of the output object to retrieve from the
      server.
    required: false
    value: ''
  - name: SearchBase
    description: The LDAP source to search through, e.g. "LDAP://OU=secret,DC=testlab,DC=local"
      Useful for OU queries.
    required: false
    value: ''
  - name: SearchScope
    description: Specifies the scope to search under, Base/OneLevel/Subtree (default
      of Subtree)
    required: false
    value: ''
  - name: ResultPageSize
    description: Specifies the PageSize to set for the LDAP searcher object.
    required: false
    value: ''
  - name: ServerTimeLimit
    description: Specifies the maximum amount of time the server spends searching.
      Default of 120 seconds.
    required: false
    value: ''
  - name: SecurityMasks
    description: Specifies an option for examining security information of a directory
      object. One of "Dacl", "Group", "None", "Owner", "Sacl".
    required: false
    value: ''
  - name: Tombstone
    description: Specifies that the search should also return deleted/tombstoned
      objects.
    required: false
    value: 'False'
    strict: true
    suggested_values:
      - True
      - False
  - name: FindOne
    description: Return one object.
    required: false
    value: 'False'
    strict: true
    suggested_values:
      - True
      - False
  - name: OutputFunction
    description: PowerShell's output function to use ("Out-String", "ConvertTo-Json",
      "ConvertTo-Csv", "ConvertTo-Html", "ConvertTo-Xml").
    required: false
    value: Out-String
    strict: false
    suggested_values:
      - Out-String
      - ConvertTo-Json
      - ConvertTo-Csv
      - ConvertTo-Html
      - ConvertTo-Xml
script_path: situational_awareness/network/powerview.ps1
script_end: Get-DomainGroup {{ PARAMS }} | {{ OUTPUT_FUNCTION }} | %{$_ + "`n"};
  'Get-DomainGroup completed'
