name: Invoke-ReverseDNSLookup
authors:
  - name: DarkOperator
    handle: ''
    link: ''
description: |
  A network reconnaissance module that performs reverse DNS lookups
  across specified IPv4 address ranges. This module queries DNS
  servers to resolve IP addresses back to hostnames, providing
  valuable information about network infrastructure and potential
  target systems.

  The module can process individual IP addresses, IP ranges, or
  CIDR notation blocks to systematically map network hostnames.
  This technique is particularly useful for identifying servers,
  workstations, and network devices that may not be immediately
  apparent through other discovery methods.

  Reverse DNS lookups can reveal internal naming conventions,
  identify specific services or applications, and provide insight
  into network architecture and organization. This information
  is essential for understanding the target environment and
  planning subsequent reconnaissance activities. The module
  includes error handling and output formatting options for
  integration with other security assessment tools.
software: ''
tactics: [TA0007]
techniques: [T1046, T1590.005]
background: true
output_extension:
needs_admin: false
opsec_safe: true
language: powershell
min_language_version: '2'
comments:
  - https://github.com/darkoperator/Posh-SecMod/blob/master/Discovery/Discovery.psm1
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: Range
    description: Range to perform reverse DNS on.
    required: false
    value: ''
  - name: CIDR
    description: CIDR to perform reverse DNS on.
    required: false
    value: ''
  - name: OutputFunction
    description: PowerShell's output function to use ("Out-String", "ConvertTo-Json",
      "ConvertTo-Csv", "ConvertTo-Html", "ConvertTo-Xml").
    required: false
    value: Out-String
    strict: false
    suggested_values:
      - Out-String
      - ConvertTo-Json
      - ConvertTo-Csv
      - ConvertTo-Html
      - ConvertTo-Xml
script_path: situational_awareness/network/Invoke-ReverseDNSLookup.ps1
script_end: Invoke-ReverseDNSLookup {{ PARAMS }} | % {try{$entry=$_; $ipObj = [System.Net.IPAddress]::parse($entry.HostName);
  if(-not [System.Net.IPAddress]::tryparse([string]$_.HostName, [ref]$ipObj)) { $entry
  }} catch{$entry} } | Select-Object HostName, AddressList | ft -autosize | {{ OUTPUT_FUNCTION
  }} | %{$_ + "`n"}; 'Invoke-ReverseDNSLookup completed'
