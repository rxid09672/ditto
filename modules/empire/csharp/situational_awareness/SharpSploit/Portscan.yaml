name: PortScan
authors:
  - name: Anthony Rose
    handle: Cx01N
    link: https://twitter.com/Cx01N_
description: |
  C# module that leverages SharpSploit's PortScan functionality to perform TCP port scans
  on specified computer names or IP addresses. Uses SharpSploit's Network class to
  execute port scans, returning detailed PortScanResult information including open ports,
  hostnames, and port status. Supports both single-host and multi-host scanning, making it
  useful for network reconnaissance and vulnerability assessment.
software: ''
tactics: [TA0007]
techniques: [T1046]
background: false
output_extension: ''
needs_admin: false
opsec_safe: true
language: csharp
min_language_version: ''
options:
  - name: ComputerNames
    description: ComputerName(s) to port scan. Can be a DNS name, IP address, or
      CIDR range.
    required: true
    value: 127.0.0.1
    strict: false
    suggested_values: []
  - name: Ports
    description: Ports to scan. Semicolon delimited port list, use hyphens for port
      ranges
    required: true
    value: 80; 443-445; 3389
    strict: false
    suggested_values: []
  - name: Ping
    description: Boolean, whether to ping hosts prior to port scanning.
    required: false
    value: false
    strict: false
    suggested_values: []
csharp:
  UnsafeCompile: false
  CompatibleDotNetVersions:
    - Net35
    - Net40
  Code: |
    using System;
    using System.IO;
    using System.Linq;
    using System.Collections.Generic;
    using SharpSploit.Enumeration;
    using SharpSploit.Generic;

    public static class Program
    {
        public static void Main(string[] args)
        {
            string computerNames = args.Length > 0 ? args[0] : "";
            string ports = args.Length > 1 ? args[1] : "";
            string ping = args.Length > 2 ? args[2] : "false";

            string result = PerformPortScan(computerNames, ports, ping);
            Console.WriteLine(result);
        }

        public static string PerformPortScan(string computerNames, string ports, string ping)
        {
            using (StringWriter stringWriter = new StringWriter())
            {
                try
                {
                    List<int> portList = new List<int>();
                    foreach (string entry in ports.Split(';'))
                    {
                        if (entry.Contains("-"))
                        {
                            string[] parts = entry.Split('-');
                            int firstPort = int.Parse(parts[0]);
                            int numPorts = int.Parse(parts[1]) - firstPort + 1;
                            portList.AddRange(Enumerable.Range(firstPort, numPorts));
                        }
                        else
                        {
                            portList.Add(int.Parse(entry));
                        }
                    }

                    List<string> computerList = computerNames.Split(',').ToList();
                    bool pingB = (ping.ToLower() == "true");

                    SharpSploitResultList<Network.PortScanResult> results = Network.PortScan(computerList, portList, pingB);
                    stringWriter.WriteLine(results.ToString());
                }
                catch (Exception e)
                {
                    stringWriter.WriteLine(e.GetType().FullName + ": " + e.Message + Environment.NewLine + e.StackTrace);
                }

                return stringWriter.ToString();
            }
        }
    }
  ReferenceSourceLibraries:
    - Name: SharpSploit
      Description: SharpSploit is a library for C# post-exploitation modules.
      Location: SharpSploit\SharpSploit\
      Language: CSharp
      CompatibleDotNetVersions:
        - Net35
        - Net40
      ReferenceAssemblies:
        - Name: System.Management.Automation.dll
          Location: net35\System.Management.Automation.dll
          DotNetVersion: Net35
        - Name: System.Management.dll
          Location: net40\System.Management.dll
          DotNetVersion: Net40
        - Name: System.Management.Automation.dll
          Location: net40\System.Management.Automation.dll
          DotNetVersion: Net40
        - Name: System.IdentityModel.dll
          Location: net40\System.IdentityModel.dll
          DotNetVersion: Net40
        - Name: System.dll
          Location: net40\System.dll
          DotNetVersion: Net40
        - Name: System.DirectoryServices.dll
          Location: net40\System.DirectoryServices.dll
          DotNetVersion: Net40
        - Name: System.Core.dll
          Location: net40\System.Core.dll
          DotNetVersion: Net40
        - Name: mscorlib.dll
          Location: net40\mscorlib.dll
          DotNetVersion: Net40
        - Name: System.Management.dll
          Location: net35\System.Management.dll
          DotNetVersion: Net35
        - Name: mscorlib.dll
          Location: net35\mscorlib.dll
          DotNetVersion: Net35
        - Name: System.Core.dll
          Location: net35\System.Core.dll
          DotNetVersion: Net35
        - Name: System.DirectoryServices.dll
          Location: net35\System.DirectoryServices.dll
          DotNetVersion: Net35
        - Name: System.dll
          Location: net35\System.dll
          DotNetVersion: Net35
        - Name: System.IdentityModel.dll
          Location: net35\System.IdentityModel.dll
          DotNetVersion: Net35
      EmbeddedResources: []
  ReferenceAssemblies: []
  EmbeddedResources: []
