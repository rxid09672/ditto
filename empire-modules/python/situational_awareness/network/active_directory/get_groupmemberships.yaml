name: Get Group Membership
authors:
  - name: ''
    handle: '@424f424f'
    link: https://twitter.com/424f424f
description: |
  An Active Directory enumeration module that identifies all group memberships
  for a specified user within the target domain. This module performs targeted
  reconnaissance to understand user privileges and organizational role through
  comprehensive group membership analysis.

  The module queries Active Directory via LDAP to extract all group memberships
  for the specified user account. This information is essential for understanding
  the user's privilege level, access rights, and organizational position within
  the domain structure.

  The enumeration results provide critical intelligence for privilege escalation
  and access control analysis by revealing the complete scope of a user's
  permissions and group affiliations. This module is fundamental for user
  reconnaissance and helps operators understand the target's role and potential
  access to sensitive resources within the domain.
software: ''
tactics: []
techniques:
  - T1482
background: false
output_extension: ''
needs_admin: false
opsec_safe: true
language: python
min_language_version: '2.6'
comments:
  - ''
options:
  - name: Agent
    description: Agent to run on.
    required: true
    value: ''
  - name: LDAPAddress
    description: LDAP IP/Hostname
    required: true
    value: ''
  - name: BindDN
    description: user@penlab.local
    required: true
    value: ''
  - name: Password
    description: Password to connect to LDAP
    required: false
    value: ''
  - name: User
    description: User to check group memberships of
    required: false
    value: ''
script: |-
  import sys, os, subprocess, re
  BindDN = "{{ BindDN }}"
  LDAPAddress = "{{ LDAPAddress }}"
  password = "{{ Password }}"
  user = "{{ User }}"

  regex = re.compile('.+@([^.]+)\..+')
  global tld
  match = re.match(regex, BindDN)
  tld = match.group(1)
  global ext
  ext = BindDN.split('.')[1]


  cmd = \"""ldapsearch -x -h {} -b "dc={},dc={}" -D {} -w {} "(samAccountName="{}")" ""\".format(LDAPAddress, tld, ext, BindDN, username, password, user)
  output = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
  output2 = subprocess.Popen(["grep", "memberOf:"],stdin=output.stdout, stdout=subprocess.PIPE,universal_newlines=True)
  output.stdout.close()
  out,err = output2.communicate()
  print("")
  print(out)
