name: Get Computers
authors:
  - name: ''
    handle: '@424f424f'
    link: https://twitter.com/424f424f
description: |
  An Active Directory enumeration module that retrieves a comprehensive list
  of all computer objects within the target domain. This module performs
  essential reconnaissance to map the network infrastructure and identify
  potential targets for lateral movement and privilege escalation.

  The module queries Active Directory via LDAP to extract all computer objects
  including workstations, servers, and domain controllers. This information
  is essential for understanding the network topology and identifying
  potential targets for lateral movement and privilege escalation attacks.

  The enumeration results provide critical intelligence for network mapping
  and lateral movement by revealing the complete computer infrastructure
  within the domain. This module is fundamental for domain reconnaissance
  and helps operators identify potential targets for credential harvesting,
  privilege escalation, and lateral movement based on computer roles and
  network positioning.
software: ''
tactics: []
techniques:
  - T1482
background: false
output_extension: ''
needs_admin: false
opsec_safe: true
language: python
min_language_version: '2.6'
comments:
  - ''
options:
  - name: Agent
    description: Agent to run on.
    required: true
    value: ''
  - name: LDAPAddress
    description: LDAP IP/Hostname
    required: true
    value: ''
  - name: BindDN
    description: user@penlab.local
    required: true
    value: ''
  - name: Password
    description: Password to connect to LDAP
    required: false
    value: ''
script: |-
  import sys, os, subprocess, re
  BindDN = "{{ BindDN }}"
  LDAPAddress = "{{ LDAPAddress }}"
  password = "{{ Password }}"

  regex = re.compile('.+@([^.]+)\..+')
  global tld
  match = re.match(regex, BindDN)
  tld = match.group(1)
  global ext
  ext = BindDN.split('.')[1]


  cmd = \"""ldapsearch -x -h {} -b "dc={},dc={}" -D {} -w {} "(objectcategory=Computer)" ""\".format(LDAPAddress, tld, ext, BindDN, password)
  output = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
  output2 = subprocess.Popen(["grep", "name:"],stdin=output.stdout, stdout=subprocess.PIPE,universal_newlines=True)
  output.stdout.close()
  out,err = output2.communicate()
  print("")
  print(out)
