name: Invoke-ServiceAbuse
authors:
  - name: Will Schroeder
    handle: '@harmj0y'
    link: https://twitter.com/harmj0y
description: |
  A privilege escalation module that abuses Windows services to create
  a local administrator account. This technique modifies the configuration
  of a target service to execute commands that create a new user and
  add them to the local Administrators group.

  The module identifies vulnerable services and modifies their
  configuration to include user creation commands. When the service
  starts or restarts, it executes these commands with elevated
  privileges, creating a new local administrator account that can
  be used for persistent access to the system.

  This technique is particularly effective because services often
  run with elevated privileges, allowing the creation of administrative
  accounts that would normally require administrative rights. The
  module provides options to specify the username, password, and
  target local group, making it flexible for different operational
  requirements. This approach is based on the PowerUp toolkit and
  represents a sophisticated method of service-based privilege escalation.
software: S0194
tactics: [TA0004]
techniques: [T1543.003, T1136.001, T1068]
background: true
output_extension:
needs_admin: false
opsec_safe: false
language: powershell
min_language_version: '2'
comments:
  - https://github.com/PowerShellEmpire/PowerTools/tree/master/PowerUp
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: ServiceName
    description: The service name to manipulate.
    required: true
    value: ''
  - name: UserName
    description: The username to add.
    required: false
    value: john
  - name: Password
    description: Password to set for the added user.
    required: false
    value: Password123!
  - name: LocalGroup
    description: Local group to add the user to.
    required: false
    value: Administrators
  - name: OutputFunction
    description: PowerShell's output function to use ("Out-String", "ConvertTo-Json",
      "ConvertTo-Csv", "ConvertTo-Html", "ConvertTo-Xml").
    required: false
    value: Out-String
    strict: false
    suggested_values:
      - Out-String
      - ConvertTo-Json
      - ConvertTo-Csv
      - ConvertTo-Html
      - ConvertTo-Xml
script_path: privesc/PowerUp.ps1
script_end: Invoke-ServiceAbuse {{ PARAMS }} | {{ OUTPUT_FUNCTION }} | %{$_ + "`n"};
  'Invoke-ServiceAbuse completed'
