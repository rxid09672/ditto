name: Get-DomainController
authors:
  - name: Will Schroeder
    handle: '@harmj0y'
    link: https://twitter.com/harmj0y
description: |
  A network reconnaissance module that identifies and enumerates
  domain controllers within the current domain or specified domain.
  This module is part of the PowerView toolkit and provides
  essential information about the Active Directory infrastructure
  for further reconnaissance and attack planning.

  The module can discover domain controllers using multiple methods
  including DNS queries, LDAP searches, and direct server binding.
  It provides detailed information about each domain controller
  including hostname, IP address, operating system version, site
  membership, and role information such as Global Catalog status.

  This technique is fundamental for Active Directory reconnaissance
  as domain controllers are the central authority for authentication,
  authorization, and directory services. Understanding the domain
  controller landscape is essential for planning Kerberos attacks,
  credential harvesting, and understanding the overall domain
  architecture. The gathered intelligence can be used for targeting
  high-value systems and planning subsequent reconnaissance activities.
software: S0194
tactics: [TA0007]
techniques: [T1018]
background: true
output_extension:
needs_admin: false
opsec_safe: true
language: powershell
min_language_version: '2'
comments:
  - https://github.com/PowerShellMafia/PowerSploit/blob/dev/Recon/
options:
  - name: Agent
    description: Agent to run module on.
    required: true
    value: ''
  - name: Domain
    description: The domain to query for domain controllers.
    required: false
    value: ''
  - name: Server
    description: Specifies an Active Directory server (domain controller) to bind
      to.
    required: false
    value: ''
  - name: LDAP
    description: Switch. Use LDAP queries to determine the domain controllers.
    required: false
    value: ''
  - name: OutputFunction
    description: PowerShell's output function to use ("Out-String", "ConvertTo-Json",
      "ConvertTo-Csv", "ConvertTo-Html", "ConvertTo-Xml").
    required: false
    value: Out-String
    strict: false
    suggested_values:
      - Out-String
      - ConvertTo-Json
      - ConvertTo-Csv
      - ConvertTo-Html
      - ConvertTo-Xml
script_path: situational_awareness/network/powerview.ps1
script_end: Get-DomainController {{ PARAMS }} | {{ OUTPUT_FUNCTION }} | %{$_ + "`n"};
  'Get-DomainController completed'
